{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome A guide to the Hotline Miami 2 Modding About In 2016, shortly after the level editor was released, the Hotline Miami modding community was given the HLMWadExplorer . A tool that lets the user replace the games textures and sounds with their own. This opened the door for custom level creators and modders to craft their own characters stories and worlds with its own soundtrack. With the Explorer, a custom campaign, some cutscene magic, and some creative problem avoiding, you could pretty much create your own game. There was just one small catch. You couldn't resize textures or sprites. If you wanted to reskin the magnum revolver sprite, with a limited frame size of only 10 by 15 pixels, to be a huge railgun that would definitely be bigger that 10x15, you simply could not. The Explorer could only let you replace assets, not deeply modify them. And for a long time, modding was just reskinning existing texture pages. We knew the gatekeepers were a couple of binary files that contained sprite metadata. But more roadblocks were in the way. These binary files were encoded in a custom format made and only known by the developers and only readable by the game. We tried to get in contact with the developers but they informed us that they didn't have the details \"readily available\" So we were left with nothing but a hex editor to crack the files. In mid 2021 the file formats were finally cracked by yours truly and the floodgates were unlocked. And with the release of the Editor, the floodgates are open. The Explorer Shoutouts to muster128 for the patched Explorer that kickstarted the Editor project As stated in the about section, this program allowed us to view and replace the games internal files laying the defining and laying the foundation for Hotline Miami 2 modding. permenantly stuck in light mode. The Editor For Editor Downloads the Github's releases page has up to date versions. The Editor is like if the Explorer did cocaine and got dark mode. It borrows a lot of concepts and design from the Explorer, so modders of old can take advantage of the familiarity and do much more. Allowing us to achieve what was previously thought impossible. there is no light mode. Quick Links Getting started An Introduction to the Editor Tutorials - An amazing place to get started Your first mod","title":"Welcome"},{"location":"#welcome","text":"A guide to the Hotline Miami 2 Modding","title":"Welcome"},{"location":"#about","text":"In 2016, shortly after the level editor was released, the Hotline Miami modding community was given the HLMWadExplorer . A tool that lets the user replace the games textures and sounds with their own. This opened the door for custom level creators and modders to craft their own characters stories and worlds with its own soundtrack. With the Explorer, a custom campaign, some cutscene magic, and some creative problem avoiding, you could pretty much create your own game. There was just one small catch. You couldn't resize textures or sprites. If you wanted to reskin the magnum revolver sprite, with a limited frame size of only 10 by 15 pixels, to be a huge railgun that would definitely be bigger that 10x15, you simply could not. The Explorer could only let you replace assets, not deeply modify them. And for a long time, modding was just reskinning existing texture pages. We knew the gatekeepers were a couple of binary files that contained sprite metadata. But more roadblocks were in the way. These binary files were encoded in a custom format made and only known by the developers and only readable by the game. We tried to get in contact with the developers but they informed us that they didn't have the details \"readily available\" So we were left with nothing but a hex editor to crack the files. In mid 2021 the file formats were finally cracked by yours truly and the floodgates were unlocked. And with the release of the Editor, the floodgates are open.","title":"About"},{"location":"#the-explorer","text":"Shoutouts to muster128 for the patched Explorer that kickstarted the Editor project As stated in the about section, this program allowed us to view and replace the games internal files laying the defining and laying the foundation for Hotline Miami 2 modding. permenantly stuck in light mode.","title":"The Explorer"},{"location":"#the-editor","text":"For Editor Downloads the Github's releases page has up to date versions. The Editor is like if the Explorer did cocaine and got dark mode. It borrows a lot of concepts and design from the Explorer, so modders of old can take advantage of the familiarity and do much more. Allowing us to achieve what was previously thought impossible. there is no light mode.","title":"The Editor"},{"location":"#quick-links","text":"Getting started An Introduction to the Editor Tutorials - An amazing place to get started Your first mod","title":"Quick Links"},{"location":"TutorialsList/","text":"Tutorials Your First Mod","title":"**Tutorials**"},{"location":"TutorialsList/#tutorials","text":"Your First Mod","title":"Tutorials"},{"location":"Tutorials/0/","text":"Getting Started Core Concepts Before we jump in to Editor and start breaking shit there are some key concepts and some important files we'll at least need to know exist. Game Resources Hotline Miami modding begins with the games base .WAD Archive named hlm2_data_desktop.wad . It is located next to the .exe in the games installed directory (or in the Resources folder in the applications package contents on macos). It holds every texture, shader, sound, font, sprite, tile, level, object, and dialogue line in the game. The only way we can see whats in this .WAD Archive is with the Explorer or Editor. Mods are just another .WAD Archive that only contain modified game files retrieved from the base wad. Within this base wad you have a bunch of folders a few key ones are: The Atlases/ folder has all of the games sprite graphics. In here are .png texture pages with a .meta sprite atlas file of the same name. A .meta file is like the cookie cutter for every sprite on the texture page. The Fonts/ folder has the fonts used throughout the game. Just like the Atlases/ folder you have a .png character page followed by an .fnt (xml formatted) character atlas. The Sounds/ folder has every sound in the game. Sounds must be preserve their original format. Wheres the music? For music, switch to the hlm2_music_desktop.wad file located next to the base wad. Mods All Hotline Miami mods are saved as .patchwad files. Fun fact, Patchwads are literally just a WAD Archives with the word \"patch\" thrown in the file extension. The key difference is, instead of storing all of the games resources it only contains the modified duplicates of the originals, a patch wad. There are also two categories which all mods fall under Global mods Global mods let you change pretty much anything about the game. They are applied on the initial loading screen before the game boots to the logo screens and the game actually starts. Global mods will be placed and located in your users Documents/My Games/HotlineMiami2/Mods folder. Level mods Level mods are a bit more restricted in their scope but the most stable kind of mod. Level mods only let you do one thing: change texture pages. Its incredibly bare bones especially when you consider the fact that for some reason you can't change the weapons in a level mod. This degree of restriction is probably placed because mods can be packaged with custom levels and put on the workshop. Level mods will be in a mods/ folder in your levels directory. If its not there create one! Local levels are in your users Documents/My Games/HotlineMiami2/Levels folder. Setting up To make mods, we'll first need our tools. This wiki uses the Editor as its main utility for modding. It is also recommended to download the Explorer as it is extremely lightweight, good for quickly checking mods when needed, and light mode. For Editor Downloads the Github's releases page has up to date versions. For Explorer Downloads muster128 has made a patched version with a handful of QoL improvements. First Time Configuration After you've downloaded and launched the Editor for the first time you'll be welcomed with a pretty blank winwdow with no resources popping up. Like the Explorer, the Editor needs a base wad to reference. Just like the Explorer, its under File/Switch base wad and locate your base wad. We only have to do this once. Your looking for the hlm2_data_desktop.wad file in the games installed directory. Common places are: On Windows C:/Program Files(x86)/Steam/steamapps/common/HotlineMiami2/ On macOS Applications/Hotline Miami 2 Wrong Number.app/Contents/Resources/ in your apps package contents. You will need to copy and paste the base wad file to a directory outside the app contents. Next Step Alright after you've downloaded and configured the Editor your ready for formal Introduction to the Editor which will step you through the main components of the Editor. If you're hungry to jump into modding and don't need to familiarize yourself, Your first Mod will step you through the process of making a mod.","title":"Getting Started"},{"location":"Tutorials/0/#getting-started","text":"","title":"Getting Started"},{"location":"Tutorials/0/#core-concepts","text":"Before we jump in to Editor and start breaking shit there are some key concepts and some important files we'll at least need to know exist.","title":"Core Concepts"},{"location":"Tutorials/0/#game-resources","text":"Hotline Miami modding begins with the games base .WAD Archive named hlm2_data_desktop.wad . It is located next to the .exe in the games installed directory (or in the Resources folder in the applications package contents on macos). It holds every texture, shader, sound, font, sprite, tile, level, object, and dialogue line in the game. The only way we can see whats in this .WAD Archive is with the Explorer or Editor. Mods are just another .WAD Archive that only contain modified game files retrieved from the base wad. Within this base wad you have a bunch of folders a few key ones are: The Atlases/ folder has all of the games sprite graphics. In here are .png texture pages with a .meta sprite atlas file of the same name. A .meta file is like the cookie cutter for every sprite on the texture page. The Fonts/ folder has the fonts used throughout the game. Just like the Atlases/ folder you have a .png character page followed by an .fnt (xml formatted) character atlas. The Sounds/ folder has every sound in the game. Sounds must be preserve their original format. Wheres the music? For music, switch to the hlm2_music_desktop.wad file located next to the base wad.","title":"Game Resources"},{"location":"Tutorials/0/#mods","text":"All Hotline Miami mods are saved as .patchwad files. Fun fact, Patchwads are literally just a WAD Archives with the word \"patch\" thrown in the file extension. The key difference is, instead of storing all of the games resources it only contains the modified duplicates of the originals, a patch wad. There are also two categories which all mods fall under","title":"Mods"},{"location":"Tutorials/0/#global-mods","text":"Global mods let you change pretty much anything about the game. They are applied on the initial loading screen before the game boots to the logo screens and the game actually starts. Global mods will be placed and located in your users Documents/My Games/HotlineMiami2/Mods folder.","title":"Global mods"},{"location":"Tutorials/0/#level-mods","text":"Level mods are a bit more restricted in their scope but the most stable kind of mod. Level mods only let you do one thing: change texture pages. Its incredibly bare bones especially when you consider the fact that for some reason you can't change the weapons in a level mod. This degree of restriction is probably placed because mods can be packaged with custom levels and put on the workshop. Level mods will be in a mods/ folder in your levels directory. If its not there create one! Local levels are in your users Documents/My Games/HotlineMiami2/Levels folder.","title":"Level mods"},{"location":"Tutorials/0/#setting-up","text":"To make mods, we'll first need our tools. This wiki uses the Editor as its main utility for modding. It is also recommended to download the Explorer as it is extremely lightweight, good for quickly checking mods when needed, and light mode. For Editor Downloads the Github's releases page has up to date versions. For Explorer Downloads muster128 has made a patched version with a handful of QoL improvements.","title":"Setting up"},{"location":"Tutorials/0/#first-time-configuration","text":"After you've downloaded and launched the Editor for the first time you'll be welcomed with a pretty blank winwdow with no resources popping up. Like the Explorer, the Editor needs a base wad to reference. Just like the Explorer, its under File/Switch base wad and locate your base wad. We only have to do this once. Your looking for the hlm2_data_desktop.wad file in the games installed directory. Common places are: On Windows C:/Program Files(x86)/Steam/steamapps/common/HotlineMiami2/ On macOS Applications/Hotline Miami 2 Wrong Number.app/Contents/Resources/ in your apps package contents. You will need to copy and paste the base wad file to a directory outside the app contents.","title":"First Time Configuration"},{"location":"Tutorials/0/#next-step","text":"Alright after you've downloaded and configured the Editor your ready for formal Introduction to the Editor which will step you through the main components of the Editor. If you're hungry to jump into modding and don't need to familiarize yourself, Your first Mod will step you through the process of making a mod.","title":"Next Step"},{"location":"Tutorials/1/","text":"Introduction to the Editor The Editor is an all in one modding tool. It lets you change any sprite, tile, or font in the game to be any size or shape you want. For advanced users, you can even inspect and change lower level resources like game objects, and game levels. Interface breakdown Asset List On the left side of the window you have an Asset List, neatly listing all viewable game resources. Selecting an asset will change the editors viewing panel to display the files contents. Menu bar At the top of the window is the menu bar. Almost everything is done through the menu bar. The menu bar holds every operation and other options organized into distinct categories. Some operations from the menu bar also have keyboard shortcuts so you don't have to waste time clicking everything. Menu bar Categories By default the Editors menu bar has 3 categories. File, Resource, and View, are always there but depending on what file you're viewing you might see more which we will cover in the next paragraph. Open Patch Open a mod. Save Patch Save the current opened mod to your computer Save Patch as Save the current opened mod to your computer Recent Patches Lists recently opened patches to be opened. Import from Patch Not implemented yet. Switch Base WAD Switch the applications base reference wad. Quit quits the application, does not save or prompt to save... I should probably fix that. Extract Save the current selected asset to your computer. Revert Revert the current selected asset to its original version. AKA Delete modifications from the current asset Expand Asset List Expands every folder in the Asset List, displaying every single file. Show Only Modifed Files Limits the Asset List to only show modified assets Advanced Toggles the Asset List to also display other types of game metadata. Toggle Asset List Hides and shows the asset list from the interface. Viewing Panel Taking up the body of the window is the viewing panel. The viewing panel visually displays assets and previews your changes. On the simplest level, the Editor is just a fancy file viewer. And viewing each file will switch the Editor's viewing mode to view each files contents. There are 4 modes of viewing available: Meta View Where most of the sprite trickery happens. In this view we are modifying 2 files primarily, the current .meta file and its texture page file. They are two seperate files but require each other Meta view previews all the sprites the current .meta file contains along with a timeline and playback controls. Toggle play/pause with Spacebar . Meta View Submenus In meta view, the menu bar at the top of the window is given two addition sub menus: Texture page operations. Import Texture Page Replace the current .meta's texture page with a .png image Export Texture Page Save the current .meta's texture page to a .png image Recompile Texture Page Recompile your .meta's texture page to reflect your newest changes and update the collision for each sprite. Sprite operations Import Sprite from Strip Replace the current sprite from a .png sprite strip file Export Sprite to Strip Save the current sprite to a .png sprite strip file Export Sprite to GIF Save the current sprite to a animated .gif Export All Sprites Save every sprite in the current .meta file to automatically named .png sprite strip files Transform Sprite Modify the current sprites frame dimensions and frame count Toggle Gizmos Toggles displaying frame info on the sprite preview Font View Font view lets you preview fonts, pretty simple. Theres a text box at the top so you can demo how it'd look in game. At the time of writing it is not as feature full as the Meta view but that is planned to change. Font View Submenus Font texture page operations. Import Texture Page Replace the current font's associated texture page with a .png image Export Texture Page Save the current font's associated texture page to a .png image Recompile Texture Page Recompile your fonts texture page to reflect your newest changes. Sound View Sound view lets you preview sounds. At the moment of writing you can only preview .wav files and you cannot actually change them. For sound mods check out to the Music Mods section which will use the Explorer as that is all that is needed to make music mods. Tree View This is mostly involved with having Advanced files enabled. When you select an asset that doesn't have an associated viewer Tree view is used displaying the assets raw structure The demo screenshot is showcasing a game objects data displaying its sprite, parent game object, and its collision sprite amongst other variables. Next Step Feeling comfortable? No? Now is probably time for Your first Mod .","title":"Introduction to the Editor"},{"location":"Tutorials/1/#introduction-to-the-editor","text":"The Editor is an all in one modding tool. It lets you change any sprite, tile, or font in the game to be any size or shape you want. For advanced users, you can even inspect and change lower level resources like game objects, and game levels.","title":"Introduction to the Editor"},{"location":"Tutorials/1/#interface-breakdown","text":"","title":"Interface breakdown"},{"location":"Tutorials/1/#asset-list","text":"On the left side of the window you have an Asset List, neatly listing all viewable game resources. Selecting an asset will change the editors viewing panel to display the files contents.","title":"Asset List"},{"location":"Tutorials/1/#menu-bar","text":"At the top of the window is the menu bar. Almost everything is done through the menu bar. The menu bar holds every operation and other options organized into distinct categories. Some operations from the menu bar also have keyboard shortcuts so you don't have to waste time clicking everything.","title":"Menu bar"},{"location":"Tutorials/1/#menu-bar-categories","text":"By default the Editors menu bar has 3 categories. File, Resource, and View, are always there but depending on what file you're viewing you might see more which we will cover in the next paragraph. Open Patch Open a mod. Save Patch Save the current opened mod to your computer Save Patch as Save the current opened mod to your computer Recent Patches Lists recently opened patches to be opened. Import from Patch Not implemented yet. Switch Base WAD Switch the applications base reference wad. Quit quits the application, does not save or prompt to save... I should probably fix that. Extract Save the current selected asset to your computer. Revert Revert the current selected asset to its original version. AKA Delete modifications from the current asset Expand Asset List Expands every folder in the Asset List, displaying every single file. Show Only Modifed Files Limits the Asset List to only show modified assets Advanced Toggles the Asset List to also display other types of game metadata. Toggle Asset List Hides and shows the asset list from the interface.","title":"Menu bar Categories"},{"location":"Tutorials/1/#viewing-panel","text":"Taking up the body of the window is the viewing panel. The viewing panel visually displays assets and previews your changes. On the simplest level, the Editor is just a fancy file viewer. And viewing each file will switch the Editor's viewing mode to view each files contents. There are 4 modes of viewing available:","title":"Viewing Panel"},{"location":"Tutorials/1/#meta-view","text":"Where most of the sprite trickery happens. In this view we are modifying 2 files primarily, the current .meta file and its texture page file. They are two seperate files but require each other Meta view previews all the sprites the current .meta file contains along with a timeline and playback controls. Toggle play/pause with Spacebar .","title":"Meta View"},{"location":"Tutorials/1/#meta-view-submenus","text":"In meta view, the menu bar at the top of the window is given two addition sub menus:","title":"Meta View Submenus"},{"location":"Tutorials/1/#font-view","text":"Font view lets you preview fonts, pretty simple. Theres a text box at the top so you can demo how it'd look in game. At the time of writing it is not as feature full as the Meta view but that is planned to change.","title":"Font View"},{"location":"Tutorials/1/#font-view-submenus","text":"","title":"Font View Submenus"},{"location":"Tutorials/1/#sound-view","text":"Sound view lets you preview sounds. At the moment of writing you can only preview .wav files and you cannot actually change them. For sound mods check out to the Music Mods section which will use the Explorer as that is all that is needed to make music mods.","title":"Sound View"},{"location":"Tutorials/1/#tree-view","text":"This is mostly involved with having Advanced files enabled. When you select an asset that doesn't have an associated viewer Tree view is used displaying the assets raw structure The demo screenshot is showcasing a game objects data displaying its sprite, parent game object, and its collision sprite amongst other variables.","title":"Tree View"},{"location":"Tutorials/1/#next-step","text":"Feeling comfortable? No? Now is probably time for Your first Mod .","title":"Next Step"},{"location":"Tutorials/2/","text":"Your First Mod Ok so you've downloaded the Editor, set it up, and you still want to make a mod. Fantastic, this is what we'll be making as your first mod: You can pick it up :O And you can shoot it :o For our first mod we will be making a revolver with a comically large barrel. To boil our mod into the resources we'll actually be modifying: the dropped magnum sprite, the Son's magnum walking sprite, and the Son's magnum attack sprite. Although we're only changing three sprites, this tutorial will teach you the fundamentals and the correct process to make a hotline miami 2 mod. Each sprite will have its own article. This article will change the magnum weapon itself. The next two articles will cover changing the walking animation , and the attack animation . To summarize, this tutorial will answer how to use the editor and how to work with sprite strips. The core two pillars of indie gamedev. Changing a Weapon Our first step in making our bigger magnum mod is to make the magnum bigger... Okay our first step in crafting our marvelous modification is to resprite our existing dropped magnum sprite, called sprMagnum in the Atlases/Weapons.meta file, to have a longer barrel and therefore be bigger than the original sprite requiring additional space. Editing this sprite will be pretty straight forward since this sprite is only one frame. Exporting a sprite To edit our Magnum we will want to use our sprite editor of choice. Whether thats Photoshop, Gimp, or Aseprite is up to you (I recommend Aseprite since it has a bunch of features tailored for sprite animation). We need to get this preview image onto our hard drive so we can start respriting. To do so we are going to Export our sprite by going to our menu bar at the top of the window, under Meta , and clicking the Export Sprite to Strip option ( Shift + E is its keyboard shortcut). A pop up window will appear prompting us to save our sprite to a location on our computer. Make sure you remember where you save your sprite as we will be opening this file in an your image editor of choice to do the actual respriting. Editing a sprite Heres where the Editors use falls off. Open the exported magnum sprite with your program of choice, for these tutorials I will use Aseprite although GIMP or any other image editor also works. Since this isn't a tutorial on how to use Aseprite nor how to be creative nor how use your brain, I'll simply show the before and after of respriting our magnum. Now that we've made our changes to the magnum sprite and saved it to our computer we need hop back to the Editor and add our resprited magnum to our mod. Importing a sprite Back in the editor with sprMagnum selected, just as we exported our sprite, in the menu bar at the top of the window under Meta click Import Sprite from Strip to import our newly modified sprite ( Shift + I is its keyboard shortcut). From this file dialog we will traverse to where we saved our modified magnum sprite and open it. Since the Editor can import sprites strips containing multiple frames of an animation we can change how many frames to split the sprite strip into. For this case we are only modifying a single sprite so we'll leave it at one. To apply our import click Import at the bottom of the popup window. Compiling Texture pages This is the more boring part of the modding process. Since every sprite is packed tightly together into a single texture page image changing the size of a sprite without moving the rest of the sprites would have sprites overlapping each other, not good. Therefore, every time we increase the size of a sprite the texture page needs to be repacked. Unfortunately, most computers need way more than 16ms (duration of a frame, 1/60th of a second) in order to recalculate and pack all the sprites back into the texture page. To solve this, and quickly, the Editor compiles texture pages in the background. We can see what textures the Editor is working on the top right of the window as a little popup. Next Step After importing our new magnum weapon sprite we still need to mod our players walking and attacking animations to match the new weapon. The next article will go over changing the players walking animation to fit our bigger weapon.","title":"Weapon Sprites"},{"location":"Tutorials/2/#your-first-mod","text":"Ok so you've downloaded the Editor, set it up, and you still want to make a mod. Fantastic, this is what we'll be making as your first mod: You can pick it up :O And you can shoot it :o For our first mod we will be making a revolver with a comically large barrel. To boil our mod into the resources we'll actually be modifying: the dropped magnum sprite, the Son's magnum walking sprite, and the Son's magnum attack sprite. Although we're only changing three sprites, this tutorial will teach you the fundamentals and the correct process to make a hotline miami 2 mod. Each sprite will have its own article. This article will change the magnum weapon itself. The next two articles will cover changing the walking animation , and the attack animation . To summarize, this tutorial will answer how to use the editor and how to work with sprite strips. The core two pillars of indie gamedev.","title":"Your First Mod"},{"location":"Tutorials/2/#changing-a-weapon","text":"Our first step in making our bigger magnum mod is to make the magnum bigger... Okay our first step in crafting our marvelous modification is to resprite our existing dropped magnum sprite, called sprMagnum in the Atlases/Weapons.meta file, to have a longer barrel and therefore be bigger than the original sprite requiring additional space. Editing this sprite will be pretty straight forward since this sprite is only one frame.","title":"Changing a Weapon"},{"location":"Tutorials/2/#exporting-a-sprite","text":"To edit our Magnum we will want to use our sprite editor of choice. Whether thats Photoshop, Gimp, or Aseprite is up to you (I recommend Aseprite since it has a bunch of features tailored for sprite animation). We need to get this preview image onto our hard drive so we can start respriting. To do so we are going to Export our sprite by going to our menu bar at the top of the window, under Meta , and clicking the Export Sprite to Strip option ( Shift + E is its keyboard shortcut). A pop up window will appear prompting us to save our sprite to a location on our computer. Make sure you remember where you save your sprite as we will be opening this file in an your image editor of choice to do the actual respriting.","title":"Exporting a sprite"},{"location":"Tutorials/2/#editing-a-sprite","text":"Heres where the Editors use falls off. Open the exported magnum sprite with your program of choice, for these tutorials I will use Aseprite although GIMP or any other image editor also works. Since this isn't a tutorial on how to use Aseprite nor how to be creative nor how use your brain, I'll simply show the before and after of respriting our magnum. Now that we've made our changes to the magnum sprite and saved it to our computer we need hop back to the Editor and add our resprited magnum to our mod.","title":"Editing a sprite"},{"location":"Tutorials/2/#importing-a-sprite","text":"Back in the editor with sprMagnum selected, just as we exported our sprite, in the menu bar at the top of the window under Meta click Import Sprite from Strip to import our newly modified sprite ( Shift + I is its keyboard shortcut). From this file dialog we will traverse to where we saved our modified magnum sprite and open it. Since the Editor can import sprites strips containing multiple frames of an animation we can change how many frames to split the sprite strip into. For this case we are only modifying a single sprite so we'll leave it at one. To apply our import click Import at the bottom of the popup window.","title":"Importing a sprite"},{"location":"Tutorials/2/#compiling-texture-pages","text":"This is the more boring part of the modding process. Since every sprite is packed tightly together into a single texture page image changing the size of a sprite without moving the rest of the sprites would have sprites overlapping each other, not good. Therefore, every time we increase the size of a sprite the texture page needs to be repacked. Unfortunately, most computers need way more than 16ms (duration of a frame, 1/60th of a second) in order to recalculate and pack all the sprites back into the texture page. To solve this, and quickly, the Editor compiles texture pages in the background. We can see what textures the Editor is working on the top right of the window as a little popup.","title":"Compiling Texture pages"},{"location":"Tutorials/2/#next-step","text":"After importing our new magnum weapon sprite we still need to mod our players walking and attacking animations to match the new weapon. The next article will go over changing the players walking animation to fit our bigger weapon.","title":"Next Step"},{"location":"Tutorials/3/","text":"Your First Mod Resizing an Animation Modifying our magnum sprite was pretty simple. We extracted the sprite, changed it to whatever size we wanted, made it look however we wanted. Then imported the sprite, not touching any of the settings, and we were good to go. Animations are where things start to get tricky. We want to enlarge our players walking animation, in this case sprSonWalkMagnum in Atlases/Player_Son.meta , to fit our long magnum. 16 pixels width-wise to be exact.","title":"Walking Animations"},{"location":"Tutorials/3/#your-first-mod","text":"","title":"Your First Mod"},{"location":"Tutorials/3/#resizing-an-animation","text":"Modifying our magnum sprite was pretty simple. We extracted the sprite, changed it to whatever size we wanted, made it look however we wanted. Then imported the sprite, not touching any of the settings, and we were good to go. Animations are where things start to get tricky. We want to enlarge our players walking animation, in this case sprSonWalkMagnum in Atlases/Player_Son.meta , to fit our long magnum. 16 pixels width-wise to be exact.","title":"Resizing an Animation"},{"location":"Tutorials/4/","text":"","title":"Attack Animations"}]}